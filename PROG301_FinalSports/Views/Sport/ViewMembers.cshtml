@using SportsLibrary.Interfaces;
@using SportsLibrary.Models
@using SportsLibrary.ViewModels;
@model SportsLibrary.ViewModels.RepoViewModel<Type, IPerson>

@{
    ViewData["Title"] = "Index";

    var keys = ViewData["Keys"] as ICollection<Type> ?? throw new NullReferenceException(nameof(ViewData));
    var values = ViewData["Values"] as ICollection<ICollection<IPerson>> ?? throw new NullReferenceException(nameof(ViewData));
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@foreach(var type in keys)
{
    if (Model.GetValueCommand == null) throw new NullReferenceException(nameof(Model));
    Model.GetValueCommand.Execute(type as object);
    var col = Model.GetValueCommand.Result;
    <h3>
    @type.Name
    </h3>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Name
                </th>
            </tr>
        </thead>
        <tbody>

        @foreach(var person in col)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => person.Name)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
